function isSocialShopping () {
    return window.location.href.indexOf('lets-go-shopping') > -1;
}

function getRoomCode () {
    const url = new URL(window.location.href);
    const params = new URLSearchParams(url.search);
    return params.get('lets-go-shopping') ?? null;
}


if (isSocialShopping()) {
    insertAuglioTryOnWidget(null, null, false, false, false, true);
}


function isOpenPd() {
    
    const url = new URL(window.location.href);
    
    const openpd = url.searchParams.get('openpd');
    
    return openpd === '1';
}


function isOpenWig() {
    
    const url = new URL(window.location.href);
    
    const openwig = url.searchParams.get('openwig');
    
    return openwig === '1';
}




function isOpenVto() {
    
    const url = new URL(window.location.href);
        
    const openvto = url.searchParams.get('openvto')
        
    return openvto === '1';
}


function isShoppingSession() {
    
    const url = new URL(window.location.href);
    
    const shoppingSession = url.searchParams.get('shopping-session');
    
    return shoppingSession !== null;
}


function isOpenVtoProduct() {
    
    const url = new URL(window.location.href);
    
    const item_id = url.searchParams.get('openvtoproduct');
    
    return item_id;
}


(function() {
    if(isOpenPd()) {
        insertAuglioTryOnWidget(null, null, null, false, 'pd')
    } else if(isOpenWig()) {
        insertAuglioTryOnWidget(null, null, null, false, 'wig')
    } else if(isOpenVto() || isShoppingSession()) {
        insertAuglioTryOnWidget()
    } else if(isOpenVtoProduct()) {
        
        fetch("https://tryon.auglio.com/api/check-item-ids", {
            method: "POST",
            headers: {
                "Content-Type" : "application/json",
            },
            body: JSON.stringify({
                item_ids: [isOpenVtoProduct()],
                partner_id: 8002,
            }),
        })
        .then((res) => res.json())
        .then((ids) => {
            createHiddenAuglioTryOnBtns(ids)
            
            if(ids.length > 0) {
                insertAuglioTryOnWidget(ids[0].product_id, ids[0].group_id, false)
            } else {
                
                insertAuglioTryOnWidget()
            }
        })
    }
})();


function isAuglioStandaloneMirror() {
    return getAuglioStandaloneMirror() ? true : false
}


function getAuglioStandaloneMirror() {
    return document.getElementById('auglio-standalone-mirror')
}


(function() {
    if(isAuglioStandaloneMirror()) {
        let item_id = getAuglioStandaloneMirror().getAttribute('data-item_id');
        console.log("item_id", item_id)
        if(item_id) {
            
            fetch("https://tryon.auglio.com/api/check-item-ids", {
                method: "POST",
                headers: {
                    "Content-Type" : "application/json",
                },
                body: JSON.stringify({
                    item_ids: [item_id],
                    partner_id: 8002,
                }),
            })
            .then((res) => res.json())
            .then((ids) => {
                
                if(ids.length > 0) {
                    insertAuglioTryOnWidget(ids[0].product_id, ids[0].group_id, true)
                } else {
                    insertAuglioTryOnWidget(null, null, true)
                }
            })
        } else {
            insertAuglioTryOnWidget(null, null, true)
        }
    }
})();


var virtooalRefreshBtnsEvent = new Event('virtooalRefreshBtnsReady', {});
document.dispatchEvent(virtooalRefreshBtnsEvent);

let virtooalMirrorState;
let isCrossmirrorLoaded = true;


function virtooalRefreshBtns(reverse, callback = () => {}, display_method = "block") {
    let btns = Array.from(document.querySelectorAll('.virtooal-tryon-btn, .auglio-tryon-btn'))
    if (reverse) {
        btns.forEach(btn => {
            btn.style.display = "none"
            if(btn.dataset.virtooal_id) {
                btn.dataset.item_id = btn.dataset.virtooal_id;
            }
            btn.classList.add('auglio-tryon-btn');
        })
    } else {
        btns.forEach(btn => {
            if(btn.dataset.virtooal_id) {
                btn.dataset.item_id = btn.dataset.virtooal_id;
            }
            btn.classList.add('auglio-tryon-btn');
        })
    }
    auglioRefreshBtns();

    if(typeof callback !== "function") {
        callback = () => {}
    }
    callback();
}

    virtooalRefreshBtns()


function auglioRefreshGroupBtns(callback = () => {}, context = document) {
    
    let group_item_ids = getAuglioBtns(context, true);
    
    if(group_item_ids.length < 1) {
        return
    }
    
    fetch("https://tryon.auglio.com/api/check-group-item-ids", {
        method: "POST",
        headers: {
            "Content-Type" : "application/json",
        },
        body: JSON.stringify({
            partner_id: 8002,
            group_item_ids: group_item_ids,
        }),
    })
    .then((res) => res.json())
    .then((ids) => {

        console.log('ids', ids)
        
        refreshExistingAuglioTryOnBtns(ids, undefined, context, true)
        
        if(typeof callback !== "function") {
            callback = () => {}
        }
        callback();
    })
}


function auglioRefreshBtns(callback = () => {}, context = document) {
    
    let item_ids = getAuglioBtns(context);
    
    if(item_ids.length < 1) {
        
                return
    }
    
    fetch("https://tryon.auglio.com/api/check-item-ids", {
        method: "POST",
        headers: {
            "Content-Type" : "application/json",
        },
        body: JSON.stringify({
            item_ids: item_ids,
            partner_id: 8002,
        }),
    })
    .then((res) => res.json())
    .then((ids) => {
        
        if(ids.length > 0) {
            insertAuglioFloatingIcon()
        }
        
        refreshExistingAuglioTryOnBtns(ids, undefined, context)
        
        if(typeof callback !== "function") {
            callback = () => {}
        }
        callback();
        
            })
}


function getRelatedProductBtns(product_id, category_id, group_id) {
    
    fetch("https://tryon.auglio.com/api/related-products", {
        method: "POST",
        headers: {
            "Content-Type" : "application/json",
        },
        body: JSON.stringify({
            product_id: product_id,
            category_id: category_id,
            partner_id: 8002,
            group_id: group_id,
        }),
    })
    .then((res) => res.json())
    .then((ids) => {
        
        createHiddenAuglioTryOnBtns(ids)
    })
}


function getUrlTryOnBtn() {
    
    fetch("https://tryon.auglio.com/api/url-tryon-btn", {
        method: "POST",
        headers: {
            "Content-Type" : "application/json",
        },
        body: JSON.stringify({
            partner_id: 8002,
            url: encodeURIComponent(window.location.href),
        }),
    })
    .then((res) => res.json())
    .then((id) => {
        
        createHiddenAuglioTryOnBtns([id])
        insertAuglioFloatingIcon()
    })
    .catch((error) => {
        
        console.log('No url product');
    });
}


function createHiddenAuglioTryOnBtns(ids) {
    ids.forEach(item => {
        let btn = document.createElement('button');
        btn.classList.add('auglio-tryon-btn', 'auglio-tryon-btn-hidden');
        btn.style.display = 'none';
        btn.dataset.item_id = item.item_id;
        btn.dataset.product_id = item.product_id;
        btn.dataset.category_id = item.category_id;
        btn.dataset.group_id = item.group_id;
        document.body.appendChild(btn);
    })
}


function getAuglioBtns(context = document, is_group = false) {
    
    let btns = Array.from(context.querySelectorAll('.auglio-tryon-btn'))
    
    if(btns.length < 1) {
        return []
    }
    if(is_group) {
        
        return btns.map(btn => btn.dataset.group_item_id)
    } else {
        
        return btns.map(btn => btn.dataset.item_id)
    }
}


function refreshExistingAuglioTryOnBtns(ids, displayMethod = "block", context = document, is_group = false) {
    
    context.querySelectorAll('.auglio-tryon-btn').forEach(btn => {
        btn.removeAttribute('data-product_id');
        btn.removeAttribute('data-group_id');
        btn.style.display = 'none';
    })
    ids.forEach(item => {
        let btns = [];
        
        if(is_group) {
            btns = Array.from(context.querySelectorAll(`.auglio-tryon-btn[data-group_item_id="${item.group_item_id}"]`))
        } else {
            btns = Array.from(context.querySelectorAll(`.auglio-tryon-btn[data-item_id="${item.item_id}"]`))
        }
        
        btns?.forEach(btn => {
            btn.style.display = displayMethod;
            btn.dataset.product_id = item.product_id;
            btn.dataset.category_id = item.category_id;
            btn.dataset.group_id = item.group_id;
        })
    })
}


function insertAuglioFloatingIcon() {
    
    if(document.getElementById('auglio-bubble')) {
        return
    }

    let basicElement = document.createElement('div')
    basicElement.id = 'auglio-bubble'
    basicElement.classList.add('auglio-floating-icon')

            document.body.appendChild(basicElement)
    document.getElementById('auglio-bubble').innerHTML = `<div id="auglio-bubble-logo" data-cy="auglio-bubble">
    <div id="auglio-bubble-text">
                    Espejo Virtual
            </div>
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 49.81 43.46" style="width:35px; height:35px;">
        <defs>
            <style>
                .cls-1{
                    fill:url(#linear-gradient);
                }
                .cls-3{
                    fill:url(#linear-gradient-2);
                }
            </style>
            <linearGradient id="linear-gradient" x1="31.28" y1="15.55" x2="51.69" y2="11.58" gradientTransform="translate(0 45.36) scale(1 -1)" gradientUnits="userSpaceOnUse">
                <stop offset=".3" stop-color="#000" stop-opacity=".47" />
                <stop offset=".35" stop-color="#000" stop-opacity=".41" />
                <stop offset=".49" stop-color="#000" stop-opacity=".26" />
                <stop offset=".63" stop-color="#000" stop-opacity=".15" />
                <stop offset=".77" stop-color="#000" stop-opacity=".07" />
                <stop offset=".89" stop-color="#000" stop-opacity=".02" />
                <stop offset="1" stop-color="#000" stop-opacity="0" />
            </linearGradient>
            <linearGradient id="linear-gradient-2" x1="48.76" y1="27.02" x2="22.57" y2="37.06" gradientTransform="translate(0 45.36) scale(1 -1)" gradientUnits="userSpaceOnUse">
                <stop offset=".38" stop-color="#000" stop-opacity=".5" />
                <stop offset=".46" stop-color="#000" stop-opacity=".4" />
                <stop offset=".72" stop-color="#000" stop-opacity=".18" />
                <stop offset=".91" stop-color="#000" stop-opacity=".05" />
                <stop offset="1" stop-color="#000" stop-opacity="0" />
            </linearGradient>
        </defs>
        <g id="logo">
            <path id="spodna_noha" d="M49.8,43.46c-6.45,0-10.33-2.79-12.38-5.18-4.66-5.42-4.57-15.24-4.57-16.54h10.6c0,1.54-.23,7.13,1.93,9.54,.61,.68,1.73,1.58,4.43,1.58v10.6h0Z" />
            <path id="spodny_tien" class="cls-1" d="M49.8,43.46c-6.45,0-10.33-2.79-12.38-5.18-4.66-5.42-4.57-15.24-4.57-16.54h10.6c0,1.54-.23,7.13,1.93,9.54,.61,.68,1.73,1.58,4.43,1.58v10.6h0Z" />
            <path id="lavy_obluk" d="M21.72,43.46C9.74,43.46,0,33.71,0,21.74S9.75,.02,21.72,.02s21.72,9.74,21.72,21.72-9.74,21.72-21.72,21.72Zm0-32.84c-6.13,0-11.12,4.99-11.12,11.12s4.99,11.12,11.12,11.12,11.12-4.99,11.12-11.12-4.99-11.12-11.12-11.12Z" />
            <path id="vrchny_tien" class="cls-3" d="M32.84,21.73h10.6C43.44,9.75,33.7,.02,21.72,.02V10.62c6.13,0,11.12,4.98,11.12,11.11Z" />
            <path id="prava_noha" d="M32.84,0l-.02,22.19c-.24,5.92-5.09,10.67-11.09,10.67v10.6c11.82,0,21.47-9.51,21.72-21.27V0h-10.61Z" />
        </g>
            </svg>
</div>
`

    
    }


function isAuglioTouchDevice() {
    return ('ontouchstart' in window) || (navigator.maxTouchPoints > 0);
}


function isAuglioDemo() {
    return window.location.href.includes("woo.virtooal.com") || window.location.href.includes("woo.auglio.com")
}


function isAuglioPreview() {
    return window.location.href.indexOf('preview=1') > -1
}


function auglioLanguage(language) {
    
    if(language === 'auto') {
        return document.querySelector('html').lang
    } else {
        return language;
    }
}


function getAuglioSupportedLangs() {
    return ["sk","ru","pt","pl","lv","hu","fr","es","en","de","cz","it","ar","ro","hr","no","sv","da","nl","vi"]}


function insertAuglioTryOnWidget(
    productId = null,
    groupId = null,
    isStandalone = false,
    initialNoGroup = false,
    isMode = false,
    isAssistant = "",
    isOpenedThroughFloatingIcon = false
    ) {
    
    if(document.body.classList.contains('auglio-widget-inserted')) {
        return
    }
    
    if (typeof gtag === 'function' && 0 === 1) {
        gtag('event', 'Auglio_VTO_started', {
            event_category: 'VTO_started',
            event_label: 'VTO_started',
            value: 1
        });
    }
    
    let widget = document.createElement("div")
    widget.id = "auglio-widget"
    widget.dataset.partner_id = "8002"
    widget.dataset.lang = "es"
    widget.dataset.custom_lang = "0"
    widget.innerHTML = `
        <auglio-base
            :product-id="${productId}"
            :group-id="${groupId}"
            :initial-no-group="${initialNoGroup}"
            :touch-device="${isAuglioTouchDevice()}"
            :settings="{&quot;partnerId&quot;:8002,&quot;apiKey&quot;:&quot;4b521b5dabfc330f53df3743390ea2f1&quot;,&quot;storeUrl&quot;:&quot;http:\/\/petrizzio.myshopify.com&quot;,&quot;color1&quot;:&quot;000000&quot;,&quot;color2&quot;:&quot;000000&quot;,&quot;mirrorPaused&quot;:0,&quot;currency&quot;:&quot;$&quot;,&quot;fullscreen&quot;:0,&quot;pdDetection&quot;:2,&quot;cartSync&quot;:0,&quot;side&quot;:&quot;right&quot;,&quot;currencyPosition&quot;:&quot;after&quot;,&quot;logo&quot;:&quot;&quot;,&quot;overrideLenseOpacity&quot;:null,&quot;overrideLenseReflection&quot;:null,&quot;disableDetectionOnClose&quot;:1,&quot;defaultPd&quot;:64,&quot;savePd&quot;:1,&quot;mirrorEnabled&quot;:true,&quot;showWishlist&quot;:1,&quot;showAppliedProducts&quot;:1,&quot;showBuy&quot;:1,&quot;showInformation&quot;:1,&quot;showPrice&quot;:1,&quot;showDescription&quot;:1,&quot;whiteLabel&quot;:0,&quot;gdpr&quot;:0,&quot;syncWishlist&quot;:0,&quot;openProductsInNewTab&quot;:1,&quot;showNonBinary&quot;:1,&quot;floatingIconQuery&quot;:0,&quot;bgSegmentation&quot;:0,&quot;screenRecordingShare&quot;:0,&quot;socialShopping&quot;:0,&quot;assistedShopping&quot;:0,&quot;stockManagement&quot;:0,&quot;atLeastOneProductApplied&quot;:0,&quot;onlyOneCategoryApplied&quot;:0,&quot;orderByName&quot;:0,&quot;googleAnalytics&quot;:0,&quot;show360&quot;:0,&quot;saveWishlist&quot;:1}"
            :is-preview="${isAuglioPreview()}"
            :is-demo="${isAuglioDemo()}"
            :is-presentation="false"
            :is-fullscreen-mode="false"
            :is-kiosk="false"
            is-test=""
            :is-standalone="${isStandalone}"
            :is-assistant="'${isAssistant}'"
            :is-pd-mode="${isMode === 'pd' ? 'true' : 'false' }"
            is-head-measurement-mode="${isMode && isMode !== 'pd' ? isMode.split('_')[0] : '' }"
            head-measurement-result-type="${isMode ? isMode.split('_')[1] ?? 'default' : 'default' }"
            :is-opened-through-floating-icon="${isOpenedThroughFloatingIcon}"
            :ignore-published="false"
        >
                                                <auglio-container>
    <auglio-logo></auglio-logo>
    <auglio-top-menu>
                    <auglio-categories></auglio-categories>
                    </auglio-top-menu>
    <auglio-close></auglio-close>
    <auglio-carousel></auglio-carousel>
            <auglio-minimize></auglio-minimize>
        <auglio-right-menu>
                    <auglio-slider></auglio-slider>
                                            <auglio-share></auglio-share>
                                    <auglio-pd></auglio-pd>
                            <auglio-settings></auglio-settings>
            </auglio-right-menu>
    <auglio-bottom-menu></auglio-bottom-menu>
    <auglio-link></auglio-link>
    <auglio-preloader></auglio-preloader>
</auglio-container>
                                    </auglio-base>`;

    
    if(isStandalone) {
        document.getElementById('auglio-standalone-mirror').appendChild(widget)
    } else {
        
        document.body.appendChild(widget)
    }

    
    let link = document.createElement("link")
    link.rel = "modulepreload"
    link.href = 'https://tryon.auglio.com//build/assets/app.3f93304b.js'
    document.body.appendChild(link)

    
    let script = document.createElement("script")
    script.src = 'https://tryon.auglio.com//build/assets/app.3f93304b.js'
    script.type = 'module'
    document.body.appendChild(script)

    
    document.body.classList.add('auglio-widget-inserted')
}


document.addEventListener('click', function (event) {
    
    let path = event.composedPath();
    let targetElement = path[0]; // The actual target element of the click

    
    if(targetElement.matches('.auglio-no-group-btn')) {
        insertAuglioTryOnWidget(null, null, false, true)
        return;
    }

    
    if(targetElement.closest('.auglio-floating-icon')) {
        insertAuglioTryOnWidget(null, null, false, false, false, false, true)
        window.dispatchEvent( new Event('auglio-bubble'))
        return;
    }

    
    if(targetElement.matches('.auglio-assisted-shopping-btn')) {
        let roomCode = targetElement.getAttribute('data-room-code')
        insertAuglioTryOnWidget(null, null, false, false, false, roomCode, false)
        window.dispatchEvent( new Event('auglio-assisted-shopping-btn'))
        return;
    }

    
    if(targetElement.matches('.auglio-pd-btn')) {
        event.preventDefault()
        insertAuglioTryOnWidget(null, null, null, false, 'pd')
        window.dispatchEvent( new CustomEvent('auglio-pd-btn'))
        return;
    }

    
    if(targetElement.matches('.auglio-wig-btn')) {
        event.preventDefault()
        insertAuglioTryOnWidget(null, null, null, false, 'wig')
        window.dispatchEvent( new CustomEvent('auglio-wig-btn'))
        return;
    }

    
    if(targetElement.matches('.auglio-head-btn')) {
        event.preventDefault()
        let mode = targetElement?.getAttribute('data-mode') ?? 'headHatEar'
        insertAuglioTryOnWidget(null, null, null, false, mode)
        window.dispatchEvent( new CustomEvent('auglio-head-btn', {
            detail: {
                mode: mode
            }
        }))
        return;
    }

    
    if(targetElement.closest('.auglio-tryon-btn')) {
        targetElement = targetElement.closest('.auglio-tryon-btn')
    } else if (!targetElement.matches('.auglio-tryon-btn')) {
        return
    }

    
    event.preventDefault()
    
    let productId = targetElement.getAttribute('data-product_id')
    let fullscreen = targetElement.getAttribute('data-fullscreen')
    let categoryId = targetElement.getAttribute('data-category_id')
    let groupId = targetElement.getAttribute('data-group_id')
    
    insertAuglioTryOnWidget(productId, groupId)
    
    window.dispatchEvent( new CustomEvent('auglio-tryon-btn', {
        detail: {
            id: productId,
            groupId: groupId,
            fullscreen: fullscreen,
            categoryId: categoryId,
        }
    }))

}, false)




function auglioCodeLoadedStats() {
    
    const statsUrl = `//www.virtooal.com/render/stats.php?partnerId=8002&interaction=4&url=${encodeURIComponent(window.location.href)}`;

    
    fetch(statsUrl, { method: 'GET', mode: 'no-cors' });
}
auglioCodeLoadedStats();


function auglioTryonBtnVisibleStats() {
    
    if(document.body.classList.contains('auglio-tryon-btn-visible')) {
        return
    }
    
    const statsUrl = `//www.virtooal.com/render/stats.php?partnerId=8002&interaction=5&url=${encodeURIComponent(window.location.href)}`;
    fetch(statsUrl, { method: 'GET', mode: 'no-cors' });

    
    document.body.classList.add('auglio-tryon-btn-visible')
    
    if (typeof gtag === 'function' && 0 === 1) {
        gtag('event', 'Auglio_VTO_loaded', {
            event_category: 'VTO_loaded',
            event_label: 'VTO_loaded',
            value: 1
        });
    }
}

function isAnyAuglioButtonVisible() {
    
    let buttons = document.querySelectorAll('.auglio-tryon-btn');
    
    for (let i = 0; i < buttons.length; i++) {
        let style = window.getComputedStyle(buttons[i]);
        if (style.display !== 'none') {
            return true;
        }
    }
    return false;
}

function isAuglioBubbleVisible() {
    
    let element = document.getElementById('auglio-bubble');
    
    if (element) {
        let style = window.getComputedStyle(element);
        return style.display !== 'none';
    }
    return false;
}


function checkAuglioVisibility(count) {
    
    if(count <= 0 || document.body.classList.contains('auglio-tryon-btn-visible')) return;
    
    setTimeout(() => {
        if(isAuglioBubbleVisible() || isAnyAuglioButtonVisible()) {
            auglioTryonBtnVisibleStats()
        }
        checkAuglioVisibility(count - 1);
    }, 1250);
}

checkAuglioVisibility(5);


function auglioCss() {
    let styleSheet = document.createElement("style")
    styleSheet.textContent = `@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap');

@font-face {
    font-family: 'AuglioHeading';
    src: url('https://tryon.auglio.com/fonts/headings.otf') format('opentype');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}
:root {
    --auglio-primary-background: #000000;
    --auglio-primary-rgb-color: 0, 0, 0;
    --auglio-primary-color: #FFFFFF;
    --auglio-blur: 5px;
        --auglio-heading-font: 'AuglioHeading', sans-serif;
            --auglio-text-font: 'Noto Sans', sans-serif;
    }

#auglio-container *:empty {
    display: block !important;
}

#auglio-backdrop:empty,
#auglio-backdrop-close:empty,
.auglio-minified #auglio-handler:empty,
.auglio-minified #auglio-size-right:empty,
.auglio-minified #auglio-size-left:empty,
.auglio-minified #auglio-size-top:empty,
.auglio-minified #auglio-size-bottom:empty {
    display: block !important;
}

@keyframes auglioFadeIn {
    0% {
        opacity: 0;
        transform: scale(0);
    },
    100% {
        opacity: 100;
        transform: scale(1);
    }
}

#auglio-bubble {
    display: none;
    z-index: 9999999;
    will-change: transform;
    cursor: pointer;
    background: rgba(0,0,0,0);
    border: none;
    transition: transform .225s ease-in-out;
    animation: auglioFadeIn 0.225s ease-in-out;
    position: fixed;
                right: 50px;
            bottom: 40px;
            }

#auglio-bubble:hover {
    transform: scale(1.05);
}

@media screen and (max-width:768px) {
    #auglio-bubble.auglio-mobile {
        display: block;
    }
    #auglio-bubble.auglio-mobile.hide {
        display: none;
    }
}

@media screen and (min-width:768px) {
    #auglio-bubble.auglio-desktop {
        display: block;
    }
    #auglio-bubble.auglio-desktop.hide {
        display: none;
    }
}

#auglio-bubble-logo {
    background-color: #000000;
    color: #FFFFFF;
    width: 50px;
    height: 50px;
    border-radius: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
}

#auglio-bubble-text {
    position: absolute;
    user-select: none;
    top: -35px;
    width:auto;
    font-size: 16px;
    z-index: 10;
    white-space: nowrap;
    background-color: #000000;
    color: #FFFFFF;
    border-radius: 100px;
    display: inline-block;
    padding: 5px 10px 5px 10px;
    line-height: 100%;
}

#auglio-bubble-text:after {
    content: '';
    display: block;
    width:4px;
    z-index: 9;
    height: 4px;
    transform: rotate(45deg);
    position: absolute;
    left: calc(50% - 2px);
    bottom: -4px;
    box-sizing: content-box !important;
    border-bottom: 4px solid #000000;
    border-right: 4px solid #000000;
}

.auglio-body-no-scroll {
    overflow: hidden;
    position: fixed;
    width: 100%;
    height: 100%;
}

#auglio-wrapper {
    font-family: var(--auglio-text-font);
}

#auglio-wrapper svg {
    fill: currentColor;
    
        width: auto;
    height: auto;
    }

#auglio-wrapper iframe {
    height: 100%;
}

#auglio-wrapper input {
    max-width: unset;
}

.auglio-btn-hidden {
    display: none !important;
}

#auglio-standalone-mirror {
    padding-top: 30px;
    padding-bottom: 20px;
}
`
    document.head.appendChild(styleSheet)
}
auglioCss();


function auglioSendErrorToBackend(details) {
    fetch('https://tryon.auglio.com/api/report-integration-error', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(details),
    })
    .then(response => response.json())
    .then(data => {
        
    })
    .catch(networkError => {
        
    });
}


function auglioHandleIntegrationError(error) {
    
    const errorDetails = {
        partner_id: 8002,
        url: window.location.href,
        message: error.message,
        stack: error.stack,
    };
    
    auglioSendErrorToBackend(errorDetails);
}


    
    
    
    
function isAuglioMinifiedAndOpened() {
    return document.body.classList.contains("auglio-widget-inserted") && document.getElementById("auglio-wrapper").classList.contains("auglio-minified") && window.innerWidth > 768 && document.getElementById("auglio-wrapper").style.display !== "none";
}
